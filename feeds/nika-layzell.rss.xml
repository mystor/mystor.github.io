<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Nika's Box - Nika Layzell</title><link>https://mystor.github.io/</link><description></description><lastBuildDate>Mon, 05 Aug 2019 00:00:00 -0400</lastBuildDate><item><title>Introducing git-revise</title><link>https://mystor.github.io/git-revise.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;(Aug. 6, 2019): Added the "What &lt;code&gt;git-revise&lt;/code&gt; is not" section.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At Mozilla I often end up building my changes in a patch stack, and used &lt;code&gt;git
rebase -i&lt;/code&gt;&lt;sup id="fnref:mozilla-hg"&gt;&lt;a class="footnote-ref" href="#fn:mozilla-hg" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; to make changes to commits in response to review
comments etc. Unfortunately, with a repository as large as
&lt;code&gt;mozilla-central&lt;/code&gt;&lt;sup id="fnref:mc-files"&gt;&lt;a class="footnote-ref" href="#fn:mc-files" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;, &lt;code&gt;git …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nika Layzell</dc:creator><pubDate>Mon, 05 Aug 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:mystor.github.io,2019-08-05:/git-revise.html</guid><category>git</category><category>git-revise</category><category>rebase</category></item><item><title>Fission Engineering Newsletter #1</title><link>https://mystor.github.io/fission-news-1.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; Fission is happening and our first "Milestone" is targeted at
the end of February. Please file bugs related to fission and mark them as
"Fission Milestone: ?" so we can triage them into the correct milestone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A little than more a year ago, a serious security flaw affecting almost …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nika Layzell</dc:creator><pubDate>Mon, 04 Feb 2019 09:00:00 -0500</pubDate><guid isPermaLink="false">tag:mystor.github.io,2019-02-04:/fission-news-1.html</guid><category>mozilla</category><category>firefox</category><category>gecko</category><category>fission</category></item><item><title>Partially Generated Classes in C++</title><link>https://mystor.github.io/partial-cxx-codegen.html</link><description>&lt;p&gt;An interesting problem which I've seen come up decently often in C++ code generators is how to deal with what I'm calling "partially generated classes". We want to generate methods and members for a class which call other methods on that class added by the implementation.&lt;/p&gt;
&lt;h2&gt;Potential Solutions&lt;/h2&gt;
&lt;p&gt;I'm not …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nika Layzell</dc:creator><pubDate>Sat, 24 Nov 2018 12:00:00 -0500</pubDate><guid isPermaLink="false">tag:mystor.github.io,2018-11-24:/partial-cxx-codegen.html</guid><category>mozilla</category><category>c++</category><category>classes</category><category>codegen</category><category>oop</category></item><item><title>Cleaning up XPConnect</title><link>https://mystor.github.io/xpconnect-changelog.html</link><description>&lt;p&gt;Recently I was working on &lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1457972"&gt;some patches&lt;/a&gt; to clean up and improve the code in
Gecko's XPConnect module. As they ended up being somewhat complex &amp;amp; required me
obtaining a lot of information about how XPConnect works, I ended up writing
some pretty in-depth commit messages.&lt;/p&gt;
&lt;p&gt;I figured that they were …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nika Layzell</dc:creator><pubDate>Mon, 30 Apr 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:mystor.github.io,2018-04-30:/xpconnect-changelog.html</guid><category>mozilla</category><category>c++</category><category>programming</category><category>gecko</category><category>xpconnect</category></item><item><title>"Wouldn't it be neat if you could write C++ inline in Rust?"</title><link>https://mystor.github.io/wouldnt-it-be-neat-p1.html</link><description>&lt;p&gt;In June of 2015, I had an idea. At the time, I was obsessed with compilers, and
what was possible to do at compile time. For one of the languages which I was
working on, I got excited by the idea that I could have flawless C++ interop by
embedding …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nika Layzell</dc:creator><pubDate>Mon, 20 Mar 2017 07:17:00 -0400</pubDate><guid isPermaLink="false">tag:mystor.github.io,2017-03-20:/wouldnt-it-be-neat-p1.html</guid><category>rust</category><category>rust-cpp</category><category>c++</category><category>ffi</category></item><item><title>ClojureScript + Meteor</title><link>https://mystor.github.io/clojurescript-meteor.html</link><description>&lt;p&gt;A few weeks ago, I released a plugin for Meteor, &lt;a href="https://github.com/mystor/meteor-clojurescript"&gt;meteor-clojurescript&lt;/a&gt;. The goal of this plugin was to make developing with Meteor in ClojureScript as easy as with any of the other languages which Meteor supports. The plugin certainly isn't at that state yet, but it's getting closer.&lt;/p&gt;
&lt;p&gt;Meteor has …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nika Layzell</dc:creator><pubDate>Sun, 27 Apr 2014 08:14:00 -0400</pubDate><guid isPermaLink="false">tag:mystor.github.io,2014-04-27:/clojurescript-meteor.html</guid><category>meteor</category><category>clojure</category><category>clojurescript</category><category>integration</category></item></channel></rss>